{"mappings":"YAAA,IAAMA,EAAS,CACXC,MAAO,0BACPC,OAAQ,2BACRC,OAAQ,2BACRC,UAAW,8BACXC,QAAS,4BACTC,WAAY,gCAQd,IADA,IAAMC,EAAQ,GACLC,EAAI,EAAGA,GAAK,GAAIA,IAAK,CAC5B,IAAMC,EAAOC,SAASC,eAAe,GAAKC,OAAFJ,IACxCD,EAAMM,KAAKJ,E,CAGb,IAAMK,EAAgB,GACtB,IAAK,IAAMC,KAAOf,EAChBc,EAAcD,KAAKb,EAAOe,GAAMf,EAAOe,IAKzC,IAHA,IAdwBC,EAclBC,EAAiBH,EAAcI,MAAK,W,OAAMC,KAAKC,SAAW,E,IAGvDC,EAAI,EAAGA,EAAId,EAAMe,OAAQD,IAAK,CACrC,IAAME,GAlBgBP,EAkBaC,EAjB5BE,KAAKK,MAAML,KAAKC,SAAWJ,EAAMM,SAkBlCG,EAAsBlB,EAAMc,GAAGK,cAAc,mBAEnD,GAAID,EAAqB,CACvB,IAAME,EAAeV,EAAeM,GAC9BK,EAAWC,OAAOC,KAAK9B,GAAQ+B,MACnC,SAAAC,G,OAAOhC,EAAOgC,KAASL,C,IAEnBM,EAAaL,EAAW,SAAkBhB,OAATgB,GAAa,GAEhDK,GACF1B,EAAMc,GAAGa,UAAUC,IAAIF,GAE7BG,QAAQC,IAAI,eAAgBV,GACxBF,EAAoBa,MAAMC,gBAAkB,QAAqB3B,OAAbe,EAAa,K,CAGnEV,EAAeuB,OAAOjB,EAAa,E,CAGrC,IAAIkB,EAAgB,GAEpB,SAASC,EAAWC,GAClB,IAKIC,EALEC,EAAcnC,SAASC,eAAegC,EAAEG,cAAcC,IACtDC,EAAeH,EAAYnB,cAAc,oBAC/CmB,EAAYX,UAAUC,IAAI,QAC1Ba,EAAaV,MAAMW,UAAY,kBACbJ,EAAYX,UAEpBgB,SAAQ,SAAAC,GACZA,EAAUC,WAAW,YACvBR,EAAaO,E,IAIjB5C,EAAM2C,SAAQ,SAAAG,GACZ,IACIC,EAMJ,GAPsBD,EAAKnB,UAEbgB,SAAQ,SAAAC,GAChBA,EAAUC,WAAW,YACvBE,EAAiBH,E,IAInBE,EAAKN,KAAOF,EAAYE,IACxBM,EAAKnB,UAAUqB,SAASX,IACxBS,EAAKnB,UAAUqB,SAAS,QAKxB,OAHEnB,QAAQC,IAAI,SACZI,EAAc5B,KAAK+B,QACnBR,QAAQC,IAAI,gBAAiBI,GAG5B,GACHY,EAAKN,KAAOF,EAAYE,IACvBM,EAAKnB,UAAUqB,SAASX,IACxBH,EAAce,SAASF,KACxBD,EAAKnB,UAAUqB,SAAS,QAYjBF,EAAKN,KAAOF,EAAYE,IAAOM,EAAKnB,UAAUqB,SAAS,YAhB3D,CAMDF,EAAKnB,UAAUuB,OAAO,QACtBZ,EAAYX,UAAUuB,OAAO,QAC/B,IAAMC,EAAYL,EAAK3B,cAAc,oBAErCiC,YAAW,WACTX,EAAaV,MAAMW,UAAY,gBAC5BS,EAAUpB,MAAMW,UAAY,e,GAC9B,IAIH,C,IAKyB,IAAzBR,EAAcnB,QAChBqC,YAAW,WACfC,MAAM,wBACFC,SAASC,Q,GACJ,I,CAKTvD,EAAM2C,SAAQ,SAAAG,GACZA,EAAKU,iBAAiB,QAASrB,E","sources":["src/index.js"],"sourcesContent":["const images = {\n    apple: '../src/images/apple.png',\n    banana: '../src/images/banana.png',\n    cherry: '../src/images/cherry.png',\n    pineapple: '../src/images/pineapple.png',\n    pumpkin: '../src/images/pumpkin.png',\n    watermelon: '../src/images/watermelon.png',\n  };\n  \n  function getRandomIndex(array) {\n    return Math.floor(Math.random() * array.length);\n  }\n  \n  const cards = [];\n  for (let i = 1; i <= 12; i++) {\n    const card = document.getElementById(`${i}`);\n    cards.push(card);\n  }\n  \n  const arrayOfImages = [];\n  for (const key in images) {\n    arrayOfImages.push(images[key], images[key]);\n  }\n  const shuffledImages = arrayOfImages.sort(() => Math.random() - 0.5);\n  \n  \n  for (let i = 0; i < cards.length; i++) {\n    const randomIndex = getRandomIndex(shuffledImages);\n    const currentFlipCardBack = cards[i].querySelector('.flip-card-back');\n  \n    if (currentFlipCardBack) {\n      const currentImage = shuffledImages[randomIndex];\n      const imageKey = Object.keys(images).find(\n        key => images[key] === currentImage\n      );\n      const imageClass = imageKey ? `image-${imageKey}` : '';\n  \n      if (imageClass) {\n        cards[i].classList.add(imageClass);\n      }\n  console.log('currentImage', currentImage)\n      currentFlipCardBack.style.backgroundImage = `url('${currentImage}')`;\n    }\n  \n    shuffledImages.splice(randomIndex, 1);\n  }\n  \n  let openedClasses = [];\n  \n  function toggleCard(e) {\n    const currentCard = document.getElementById(e.currentTarget.id);\n    const currentInner = currentCard.querySelector('.flip-card-inner');\n    currentCard.classList.add('open');\n    currentInner.style.transform = 'rotateY(180deg)';\n    const classList = currentCard.classList;\n    let fruitClass;\n    classList.forEach(className => {\n      if (className.startsWith('image-')) {\n        fruitClass = className;\n      }\n    });\n  \n    cards.forEach(card => {\n      const cardClassList = card.classList;\n      let cardFruitClass;\n      cardClassList.forEach(className => {\n        if (className.startsWith('image-')) {\n          cardFruitClass = className;\n        }\n      });\n      if (\n        card.id !== currentCard.id &&\n        card.classList.contains(fruitClass) &&\n        card.classList.contains('open')\n      ) {\n          console.log('match')\n          openedClasses.push(fruitClass);\n          console.log('openedClasses', openedClasses)\n        return;\n      }\n      else if (\n        card.id !== currentCard.id &&\n        !card.classList.contains(fruitClass) &&\n        !openedClasses.includes(cardFruitClass) &&\n        card.classList.contains('open')\n      ) {\n          card.classList.remove('open');\n          currentCard.classList.remove('open');\n        const innerCard = card.querySelector('.flip-card-inner');  \n  \n        setTimeout(() => {\n          currentInner.style.transform = 'rotateY(0deg)';\n             innerCard.style.transform = 'rotateY(0deg)';\n        }, 700);\n        return;\n      }\n      else if (card.id !== currentCard.id && !card.classList.contains('open')) {\n        return;\n      }\n    });\n  \n  \n    if (openedClasses.length === 6) {\n      setTimeout(() => {\n  alert('Вітаємо! Ви виграли!');\n      location.reload();\n        }, 700);\n      \n    }\n  }\n  \n  cards.forEach(card => {\n    card.addEventListener('click', toggleCard);\n  });\n   "],"names":["$b8f9b7833fa37166$var$images","apple","banana","cherry","pineapple","pumpkin","watermelon","$b8f9b7833fa37166$var$cards","$b8f9b7833fa37166$var$i","$b8f9b7833fa37166$var$card","document","getElementById","concat","push","$b8f9b7833fa37166$var$arrayOfImages","$b8f9b7833fa37166$var$key","array","$b8f9b7833fa37166$var$shuffledImages","sort","Math","random","$b8f9b7833fa37166$var$i1","length","$b8f9b7833fa37166$var$randomIndex","floor","$b8f9b7833fa37166$var$currentFlipCardBack","querySelector","$b8f9b7833fa37166$var$currentImage","$b8f9b7833fa37166$var$imageKey","Object","keys","find","key1","$b8f9b7833fa37166$var$imageClass","classList","add","console","log","style","backgroundImage","splice","$b8f9b7833fa37166$var$openedClasses","$b8f9b7833fa37166$var$toggleCard","e","fruitClass","currentCard","currentTarget","id","currentInner","transform","forEach","className","startsWith","card","cardFruitClass","contains","includes","remove","innerCard","setTimeout","alert","location","reload","addEventListener"],"version":3,"file":"index.f1832350.js.map"}