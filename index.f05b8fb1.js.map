{"mappings":"AAAA,MAAMA,EAAS,CACXC,MAAO,0BACPC,OAAQ,2BACRC,OAAQ,2BACRC,UAAW,8BACXC,QAAS,4BACTC,WAAY,gCAOd,MAAMC,EAAQ,GACd,IAAK,IAAIC,EAAI,EAAGA,GAAK,GAAIA,IAAK,CAC5B,MAAMC,EAAOC,SAASC,eAAe,GAAGH,KACxCD,EAAMK,KAAKH,E,CAGb,MAAMI,EAAgB,GACtB,IAAK,MAAMC,KAAOd,EAChBa,EAAcD,KAAKZ,EAAOc,GAAMd,EAAOc,IAEzC,MAAMC,EAAiBF,EAAcG,MAAK,IAAMC,KAAKC,SAAW,KAGhE,IAAK,IAAIC,EAAI,EAAGA,EAAIZ,EAAMa,OAAQD,IAAK,CACrC,MAAME,GAlBgBC,EAkBaP,EAjB5BE,KAAKM,MAAMN,KAAKC,SAAWI,EAAMF,SAkBlCI,EAAsBjB,EAAMY,GAAGM,cAAc,mBAEnD,GAAID,EAAqB,CACvB,MAAME,EAAeX,EAAeM,GAC9BM,EAAWC,OAAOC,KAAK7B,GAAQ8B,MACnCC,GAAO/B,EAAO+B,KAASL,IAEnBM,EAAaL,EAAW,SAASA,IAAa,GAEhDK,GACFzB,EAAMY,GAAGc,UAAUC,IAAIF,GAE7BG,QAAQC,IAAI,eAAgBV,GACxBF,EAAoBa,MAAMC,gBAAkB,QAAQZ,K,CAGtDX,EAAewB,OAAOlB,EAAa,E,CAnCrC,IAAwBC,EAsCxB,IAAIkB,EAAgB,GAEpB,SAASC,EAAWC,GAClB,MAAMC,EAAcjC,SAASC,eAAe+B,EAAEE,cAAcC,IACtDC,EAAeH,EAAYlB,cAAc,oBAC/CkB,EAAYV,UAAUC,IAAI,QAC1BY,EAAaT,MAAMU,UAAY,kBAE/B,IAAIC,EADcL,EAAYV,UAEpBgB,SAAQC,IACZA,EAAUC,WAAW,YACvBH,EAAaE,EAAS,IAI1B3C,EAAM0C,SAAQxC,IAEZ,IAAI2C,EAMJ,GAPsB3C,EAAKwB,UAEbgB,SAAQC,IAChBA,EAAUC,WAAW,YACvBC,EAAiBF,EAAS,IAI5BzC,EAAKoC,KAAOF,EAAYE,IACxBpC,EAAKwB,UAAUoB,SAASL,IACxBvC,EAAKwB,UAAUoB,SAAS,QAKxB,OAHElB,QAAQC,IAAI,SACZI,EAAc5B,KAAKoC,QACnBb,QAAQC,IAAI,gBAAiBI,GAG5B,GACH/B,EAAKoC,KAAOF,EAAYE,IACvBpC,EAAKwB,UAAUoB,SAASL,IACxBR,EAAcc,SAASF,KACxB3C,EAAKwB,UAAUoB,SAAS,QAYjB5C,EAAKoC,KAAOF,EAAYE,IAAOpC,EAAKwB,UAAUoB,SAAS,YAhB3D,CAMD5C,EAAKwB,UAAUsB,OAAO,QACtBZ,EAAYV,UAAUsB,OAAO,QAC/B,MAAMC,EAAY/C,EAAKgB,cAAc,oBAErCgC,YAAW,KACTX,EAAaT,MAAMU,UAAY,gBAC5BS,EAAUnB,MAAMU,UAAY,eAAe,GAC7C,IAIH,KAKyB,IAAzBP,EAAcpB,QAChBqC,YAAW,KACfC,MAAM,wBACFC,SAASC,QAAQ,GACZ,I,CAKTrD,EAAM0C,SAAQxC,IACZA,EAAKoD,iBAAiB,QAASpB,EAAW","sources":["src/index.js"],"sourcesContent":["const images = {\n    apple: '../src/images/apple.png',\n    banana: '../src/images/banana.png',\n    cherry: '../src/images/cherry.png',\n    pineapple: '../src/images/pineapple.png',\n    pumpkin: '../src/images/pumpkin.png',\n    watermelon: '../src/images/watermelon.png',\n  };\n  \n  function getRandomIndex(array) {\n    return Math.floor(Math.random() * array.length);\n  }\n  \n  const cards = [];\n  for (let i = 1; i <= 12; i++) {\n    const card = document.getElementById(`${i}`);\n    cards.push(card);\n  }\n  \n  const arrayOfImages = [];\n  for (const key in images) {\n    arrayOfImages.push(images[key], images[key]);\n  }\n  const shuffledImages = arrayOfImages.sort(() => Math.random() - 0.5);\n  \n  \n  for (let i = 0; i < cards.length; i++) {\n    const randomIndex = getRandomIndex(shuffledImages);\n    const currentFlipCardBack = cards[i].querySelector('.flip-card-back');\n  \n    if (currentFlipCardBack) {\n      const currentImage = shuffledImages[randomIndex];\n      const imageKey = Object.keys(images).find(\n        key => images[key] === currentImage\n      );\n      const imageClass = imageKey ? `image-${imageKey}` : '';\n  \n      if (imageClass) {\n        cards[i].classList.add(imageClass);\n      }\n  console.log('currentImage', currentImage)\n      currentFlipCardBack.style.backgroundImage = `url('${currentImage}')`;\n    }\n  \n    shuffledImages.splice(randomIndex, 1);\n  }\n  \n  let openedClasses = [];\n  \n  function toggleCard(e) {\n    const currentCard = document.getElementById(e.currentTarget.id);\n    const currentInner = currentCard.querySelector('.flip-card-inner');\n    currentCard.classList.add('open');\n    currentInner.style.transform = 'rotateY(180deg)';\n    const classList = currentCard.classList;\n    let fruitClass;\n    classList.forEach(className => {\n      if (className.startsWith('image-')) {\n        fruitClass = className;\n      }\n    });\n  \n    cards.forEach(card => {\n      const cardClassList = card.classList;\n      let cardFruitClass;\n      cardClassList.forEach(className => {\n        if (className.startsWith('image-')) {\n          cardFruitClass = className;\n        }\n      });\n      if (\n        card.id !== currentCard.id &&\n        card.classList.contains(fruitClass) &&\n        card.classList.contains('open')\n      ) {\n          console.log('match')\n          openedClasses.push(fruitClass);\n          console.log('openedClasses', openedClasses)\n        return;\n      }\n      else if (\n        card.id !== currentCard.id &&\n        !card.classList.contains(fruitClass) &&\n        !openedClasses.includes(cardFruitClass) &&\n        card.classList.contains('open')\n      ) {\n          card.classList.remove('open');\n          currentCard.classList.remove('open');\n        const innerCard = card.querySelector('.flip-card-inner');  \n  \n        setTimeout(() => {\n          currentInner.style.transform = 'rotateY(0deg)';\n             innerCard.style.transform = 'rotateY(0deg)';\n        }, 700);\n        return;\n      }\n      else if (card.id !== currentCard.id && !card.classList.contains('open')) {\n        return;\n      }\n    });\n  \n  \n    if (openedClasses.length === 6) {\n      setTimeout(() => {\n  alert('Вітаємо! Ви виграли!');\n      location.reload();\n        }, 700);\n      \n    }\n  }\n  \n  cards.forEach(card => {\n    card.addEventListener('click', toggleCard);\n  });\n   "],"names":["$1f0dc3b9307be026$var$images","apple","banana","cherry","pineapple","pumpkin","watermelon","$1f0dc3b9307be026$var$cards","i","card","document","getElementById","push","$1f0dc3b9307be026$var$arrayOfImages","key","$1f0dc3b9307be026$var$shuffledImages","sort","Math","random","i1","length","randomIndex","array","floor","currentFlipCardBack","querySelector","currentImage","imageKey","Object","keys","find","key1","imageClass","classList","add","console","log","style","backgroundImage","splice","$1f0dc3b9307be026$var$openedClasses","$1f0dc3b9307be026$var$toggleCard","e","currentCard","currentTarget","id","currentInner","transform","fruitClass","forEach","className","startsWith","cardFruitClass","contains","includes","remove","innerCard","setTimeout","alert","location","reload","addEventListener"],"version":3,"file":"index.f05b8fb1.js.map"}